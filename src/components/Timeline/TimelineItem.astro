---
interface Props {
  title: string;
  subtitle?: string;
  description: string | string[];
  isCurrent?: boolean;
}
const { title, subtitle, description, isCurrent = false } = Astro.props;
const isArray = Array.isArray(description);
---

<div class="flex gap-8 md:gap-10 relative">
  <div class="flex flex-col items-center flex-shrink-0">
    <div
      class={`w-5 h-5 rounded-full border-[3px] transition-none ${
        isCurrent
          ? "border-theme bg-theme animate-pulse-dot"
          : "border-gray-400 bg-white dark:bg-gray-800"
      }`}
    >
    </div>
  </div>
  <div class="pb-8 md:pb-10 flex-1 -mt-0.5">
    <strong class="text-lg block mb-1 leading-tight">{title}</strong>
    {
      subtitle && (
        <p class="text-sm text-gray-600 dark:text-gray-400 mb-2 transition-none">
          {subtitle}
        </p>
      )
    }
    {
      isArray ? (
        <ul class="list-disc list-outside ml-5 space-y-1.5 text-gray-800 transition-none">
          {description.map((item) => (
            <li class="leading-relaxed">{item}</li>
          ))}
        </ul>
      ) : (
        <p class="text-gray-800 m-0 transition-none">{description}</p>
      )
    }
  </div>
</div>

<style>
  @keyframes pulse-dot {
    0%,
    100% {
      box-shadow: 0 0 0 0 var(--bg-theme);
    }
    50% {
      box-shadow: 0 0 0 10px rgba(255, 255, 255, 0);
    }
  }

  .animate-pulse-dot {
    animation: pulse-dot 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
</style>
